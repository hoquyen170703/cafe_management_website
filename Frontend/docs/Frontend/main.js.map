{"version":3,"sources":["./src/app/shared/menu-item.ts","./src/app/service/auth.service.ts","./src/app/best-seller/best-seller.component.ts","./src/app/best-seller/best-seller.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/global-constains.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/service/route-guard.service.ts","./src/app/material-component/dialog/change-password/change-password.component.ts","./src/app/material-component/dialog/change-password/change-password.component.html","./src/app/shared/accordion/index.ts","./src/app/service/user.service.ts","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/shared/shared.module.ts","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/material-component/dialog/confirmation/confirmation.component.ts","./src/app/material-component/dialog/confirmation/confirmation.component.html","./src/app/app.module.ts","./src/app/service/token-interceptor.interceptor.ts","./src/app/forgotted-password/forgotted-password.component.ts","./src/app/forgotted-password/forgotted-password.component.html","./src/app/service/snackbar.service.ts","./src/app/shared/material-module.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/shared/accordion/accordionanchor.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Inject, Injectable } from \"@angular/core\";\r\n\r\nexport interface Menu {\r\n    state:string,\r\n    name:string,\r\n    type:string,\r\n    icon:string,\r\n    role:string\r\n}\r\n\r\nconst MENUITEMS = [\r\n    {state:'dashboard',name:'Dashboard',type:'link', icon:'dashboard',role:''},\r\n    {state:'category',name:'Quản lý loại sản phẩm',type:'link', icon:'category',role:'admin'},\r\n    {state:'product',name:'Quản lý sản phẩm',type:'link', icon:'inventory_2',role:'admin'},\r\n    {state:'order',name:'Đặt hàng',type:'link', icon:'shopping_cart',role:''},\r\n    {state:'bill',name:'Xem đơn hàng',type:'link', icon:'backup_table',role:''},\r\n    {state:'user',name:'Quản lý người dùng',type:'link', icon:'people',role:'admin'}\r\n]\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n    getMenuitem():Menu[]{\r\n        return MENUITEMS;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router: Router) { }\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      this.router.navigate(['/']);\n      return false;\n  }\n      else {\n        return true;\n    }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-best-seller',\r\n  templateUrl: './best-seller.component.html',\r\n  styleUrls: ['./best-seller.component.scss']\r\n})\r\nexport class BestSellerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"margin-top: 20px;\">\r\n    <div class=\"container\">\r\n        <div class=\"text-center\">\r\n            <h2 class=\"section-heading text-uppercase\">LAFUONG LÀ</h2>\r\n        </div>\r\n        <ul class=\"timeline\">\r\n            <li><a href=\"../../assets/img/1.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/1.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Lựa chọn lý tưởng cho bánh ngọt chuẩn Pháp</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">\r\n                            Dành nhiều tình cảm đặc biệt cho bánh ngọt Pháp, chúng tôi quyết tâm tạo nên thương hiệu LaFuong Pastry để mang tới cho mọi người một trải nghiệm thưởng thức bánh thật tinh tế và tận tâm.\r\n                            \r\n                            Hãy một lần nếm thử bánh của LaFuong để cảm nhận những tình cảm và nỗ lực của chúng tôi, tất cả nằm ở sự hoà quyện của hương vị và kết cấu đặc biệt trong từng chiếc bánh.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <a href=\"../../assets/img/image.webp\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/image.webp\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Sự sáng tạo đến từ những hương vị tự nhiên</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">\r\n                            Từ vải và dâu rừng, trà Earl Grey và cam hay xoài và lá dứa.., những chiếc bánh Entremet của LaFuong là sự kết hợp sáng tạo của nhiều tầng hương vị tự nhiên và mới lạ. Dù bạn là ai, chúng tôi mong rằng, bạn sẽ luôn tìm được chiếc bánh phù hợp với khẩu vị của riêng mình tại LaFuong.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <a href=\"../../assets/img/1.webp\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/1.webp\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Không chỉ là chiếc bánh, mà là một món quà</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">\r\n                            Bánh của LaFuong không dành để ăn một mình, vì chúng tôi tin rằng mỗi chiếc bánh được gửi đi đều là món quà mà bạn có thể sẻ chia với những người quan trọng.\r\n                            \r\n                            Từ chiếc hộp, cây nến, tấm bưu thiệp hay cách chúng tôi trao tới bạn tận tay món quà ấy, đều sẽ được LaFuong chuẩn bị thật chu đáo.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n             \r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { SignupComponent } from '../signup/signup.component';\r\nimport {ForgottedPasswordComponent} from \"../forgotted-password/forgotted-password.component\";\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { UserService } from '../service/user.service';\r\nimport { Route, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private diaglog:MatDialog,\r\n    private userService:UserService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.checkToken().subscribe((response:any)=> {\r\n      this.router.navigate(['cafe/dashboard'])\r\n    }, (error:any) =>{\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  handleSignUpAction() {\r\n    const diaglogConfig = new MatDialogConfig();\r\n    diaglogConfig.width = \"550px\"\r\n    this.diaglog.open(SignupComponent, diaglogConfig)\r\n  }\r\n\r\n  handleForgotedPasswordAction() {\r\n    const diaglogConfig = new MatDialogConfig();\r\n    diaglogConfig.width = \"550px\"\r\n    this.diaglog.open(ForgottedPasswordComponent, diaglogConfig)\r\n  }\r\n\r\n  handleLoginAction() {\r\n    const diaglogConfig = new MatDialogConfig();\r\n    diaglogConfig.width = \"550px\"\r\n    this.diaglog.open(LoginComponent, diaglogConfig)\r\n  }\r\n\r\n}\r\n","<div class=\"bg-image\"></div>\r\n<app-best-seller></app-best-seller>\r\n\r\n<div class=\"wrapper sticky\">\r\n  <nav class=\"navbar-fixed-top\">\r\n    <a href=\"#\" class=\"logo\">\r\n      <svg class=\"h-[20px] w-auto sm:h-[22px]\" width=\"90\" height=\"16\" viewBox=\"0 0 90 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.36839 15.8261H0C0.145226 15.4006 0.204675 14.952 0.175116 14.5048V2.95218C0.20378 2.65532 0.142951 2.35678 0 2.09277H2.46056C2.31598 2.35626 2.25433 2.65507 2.28322 2.95218V14.9388H7.71641L7.36839 15.8261Z\" fill=\"#444\"></path><path d=\"M9.04172 14.5412L13.5439 3.906C13.8042 3.29507 13.8042 2.60905 13.5439 1.99812L12.6572 0H14.2532L20.3271 14.3951C20.5113 14.9042 20.772 15.3842 21.1007 15.8195H18.1658C18.2008 15.7007 18.2187 15.5778 18.219 15.4543C18.1944 15.0906 18.0925 14.7359 17.9197 14.4122L16.7426 11.6192H11.9767L10.6754 14.6765C10.4936 15.0351 10.3867 15.425 10.3607 15.8238H8.32129C8.62672 15.4339 8.86961 15.0014 9.04172 14.5412ZM14.3619 5.59259L12.4976 10.2849H16.1375L14.3619 5.59259Z\" fill=\"#444\"></path><path d=\"M25.4745 7.95588H30.768L30.4155 8.8604H25.4745V14.8634C25.4469 15.1969 25.5071 15.5318 25.6496 15.8366H23.189C23.3312 15.5439 23.3916 15.2202 23.3641 14.8977V2.86604C23.3903 2.59356 23.3275 2.32001 23.1846 2.08398H31.8298L31.4773 2.98851H25.4922L25.4745 7.95588Z\" fill=\"#444\"></path><path d=\"M34.2308 9.69442V3.18012C34.2586 2.81793 34.1986 2.45446 34.0557 2.11875L36.5982 2.10156C36.4492 2.472 36.3834 2.86901 36.4054 3.26606V9.06705C36.4054 12.2619 37.1968 14.7477 39.746 14.7477C42.7541 14.7477 43.2639 12.0535 43.2639 10.8546V3.07484C43.2836 2.73973 43.2166 2.40515 43.0689 2.10156H45.0639C44.9242 2.44306 44.8578 2.8086 44.8688 3.17582V10.889C44.8688 12.8678 43.6563 15.996 39.4356 15.996C36.0241 16.0003 34.2308 14.0366 34.2308 9.69442Z\" fill=\"#444\"></path><path d=\"M49.1515 14.1044C48.445 13.4313 47.8836 12.6288 47.5 11.7436C47.1164 10.8584 46.9182 9.90805 46.917 8.94791C46.917 4.96886 50.1534 1.92871 54.3209 1.92871C58.4883 1.92871 61.7402 5.02257 61.7402 9.08757C61.7402 13.2385 58.2422 16.0015 54.2677 16.0015C52.3735 16.0332 50.5401 15.3534 49.1515 14.1044ZM59.3018 9.06178C58.8075 5.51458 55.9191 2.73655 52.8733 3.13618C50.0847 3.50142 49.0185 6.28805 49.3886 8.95651C49.8032 11.9172 52.1485 15.256 55.6332 14.8005C58.506 14.4331 59.6809 11.7883 59.3018 9.06178Z\" fill=\"#444\"></path><path d=\"M63.8372 14.5758V2.9889C63.8645 2.68312 63.8038 2.37601 63.6621 2.10156H66.5638L72.9635 12.6637V3.05765C72.9635 2.79768 72.9635 2.36368 72.7884 2.10156H74.5041C74.329 2.39806 74.329 2.70959 74.329 3.17582V14.4835C74.3007 14.9363 74.3601 15.3903 74.5041 15.822H72.7817L65.2205 3.52173V14.5715C65.1923 14.9955 65.2518 15.4207 65.3956 15.822H63.6732C63.8127 15.4213 63.8684 14.9977 63.8372 14.5758Z\" fill=\"#444\"></path><path d=\"M78.6268 14.1053C77.2391 12.8033 76.3945 11.0308 76.3945 8.77269C76.3954 7.52251 76.7542 6.29708 77.4308 5.23273C78.1075 4.16838 79.0755 3.30684 80.2272 2.74396C81.2647 2.22402 82.6368 1.92752 84.4656 1.92752C86.0987 1.88566 87.706 2.32872 89.072 3.19729L87.6466 4.23933C86.4695 3.37992 85.4144 3.00608 83.9713 3.00608C80.7016 3.00608 78.9083 5.68098 78.9083 8.04434C78.9083 12.0556 81.5994 15.0442 84.9223 15.0442C87.139 15.0442 87.8417 14.4534 87.8417 14.4534V8.86723H82.5836L82.9361 7.9627H89.5995C89.4567 8.27353 89.3958 8.61387 89.4222 8.95317V14.7907C88.5355 15.5534 86.5227 16.0067 84.4833 16.0067C81.8809 16.0003 80.0455 15.3923 78.6268 14.1053Z\" fill=\"#444\"></path></svg>\r\n    </a>\r\n    <ul>\r\n      <li>\r\n        <a class=\"btn\" (click) = \"handleSignUpAction()\">Sign Up</a>\r\n        <a class=\"btn\" (click) = \"handleLoginAction()\">Login</a>\r\n        <a class=\"btn\" (click) = \"handleForgotedPasswordAction()\">Forgot Password?</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n<div id=\"#lf-footer\" class=\"relative\"><footer class=\"relative inset-x-0 top-auto bottom-0 z-[6] -mt-[1px] flex h-full min-h-[calc(100vh-var(--nav-height)-var(--announcer-height))] flex-col space-y-8 overflow-hidden border-t border-t-gray-700 bg-white\"><div class=\"flex-center flex-1 flex-col pb-8 pt-12 lg:pt-12\"><div class=\"w-full\"><div class=\"grid grid-cols-1 gap-y-8 lg:grid-cols-3\"><div class=\"flex-center flex-col space-y-8 text-center\"><div><div class=\"mb-2 text-sm font-semibold uppercase tracking-[1px] outline-none lg:text-base\">Menu</div><ul class=\"space-y-0.5\"><li><a class=\"text-xl leading-normal underline decoration-gray-300 decoration-1 underline-offset-2 hover:decoration-gray-700\" href=\"/about\">Về LaFuong</a></li><li><a class=\"text-xl leading-normal underline decoration-gray-300 decoration-1 underline-offset-2 hover:decoration-gray-700\" href=\"/products\">Sản phẩm</a></li><li><a class=\"text-xl leading-normal underline decoration-gray-300 decoration-1 underline-offset-2 hover:decoration-gray-700\" href=\"/instruction\">Cách mua hàng</a></li><li><a class=\"text-xl leading-normal underline decoration-gray-300 decoration-1 underline-offset-2 hover:decoration-gray-700\" href=\"/instruction#faq\">Câu hỏi thường gặp</a></li></ul></div></div><div class=\"flex-center flex-col space-y-8 text-center text-xl\"><div class=\"flex flex-col space-y-10\"><div><div><div class=\"mb-2 text-sm font-semibold uppercase tracking-[1px] outline-none lg:text-base\">Hotline</div><a class=\"underline decoration-gray-300 decoration-1 underline-offset-2 hover:decoration-gray-700\" href=\"tel:+8490 786 0330\">090 786 0330</a></div></div><div><div class=\"mb-2 text-sm font-semibold uppercase tracking-[1px] outline-none lg:text-base\">Địa chỉ</div><p class=\"leading-normal\">Ngõ 91 Nguyễn Chí Thanh,<br> Q.Đống Đa, Hà Nội</p></div></div></div><div class=\"flex-center flex-col space-y-6 text-center text-xl\"><div class=\"text-center\"><div class=\"mb-3 text-sm font-semibold uppercase tracking-[1px] outline-none lg:text-base\">Follow us on</div><ul class=\"flex place-content-center space-x-2 text-center\"><li><a href=\"https://facebook.com/LaFuong.Pastry\" title=\"Facebook\" class=\"flex-center lf-transition  h-12 w-12 rounded-sm border border-transparent active:bg-gray-100 active:duration-100 sm:hover:bg-gray-100\" target=\"_blank\" rel=\"noopener noreferrer\"><span><svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.4463 18L24.335 12.2087H18.7782V8.45063C18.7782 6.86625 19.5544 5.32188 22.0432 5.32188H24.5694V0.39125C24.5694 0.39125 22.2769 0 20.085 0C15.5088 0 12.5175 2.77375 12.5175 7.795V12.2087H7.43066V18H12.5175V32H18.7782V18H23.4463Z\" fill=\"#444\"></path></svg></span></a></li><li><a href=\"https://instagram.com/lafuong.pastry/\" title=\"Instagram\" class=\"flex-center lf-transition  h-12 w-12 rounded-sm border border-transparent active:bg-gray-100 active:duration-100 sm:hover:bg-gray-100\" target=\"_blank\" rel=\"noopener noreferrer\"><span><svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16.0036 7.7956C11.4632 7.7956 7.801 11.4587 7.801 16C7.801 20.5413 11.4632 24.2044 16.0036 24.2044C20.5439 24.2044 24.2061 20.5413 24.2061 16C24.2061 11.4587 20.5439 7.7956 16.0036 7.7956ZM16.0036 21.3339C13.0695 21.3339 10.6708 18.9419 10.6708 16C10.6708 13.0581 13.0624 10.6661 16.0036 10.6661C18.9448 10.6661 21.3363 13.0581 21.3363 16C21.3363 18.9419 18.9376 21.3339 16.0036 21.3339ZM26.4549 7.46C26.4549 8.52393 25.5982 9.37365 24.5417 9.37365C23.478 9.37365 22.6284 8.51679 22.6284 7.46C22.6284 6.40321 23.4851 5.54636 24.5417 5.54636C25.5982 5.54636 26.4549 6.40321 26.4549 7.46ZM31.8876 9.40221C31.7662 6.83878 31.1808 4.56811 29.3033 2.69731C27.4329 0.826509 25.1627 0.240991 22.5999 0.112462C19.9585 -0.0374874 12.0415 -0.0374874 9.40011 0.112462C6.8444 0.23385 4.57423 0.819368 2.69671 2.69017C0.819186 4.56097 0.240937 6.83164 0.112437 9.39507C-0.0374791 12.037 -0.0374791 19.9558 0.112437 22.5978C0.233798 25.1612 0.819186 27.4319 2.69671 29.3027C4.57423 31.1735 6.83726 31.759 9.40011 31.8875C12.0415 32.0375 19.9585 32.0375 22.5999 31.8875C25.1627 31.7661 27.4329 31.1806 29.3033 29.3027C31.1737 27.4319 31.7591 25.1612 31.8876 22.5978C32.0375 19.9558 32.0375 12.0442 31.8876 9.40221ZM28.4752 25.4326C27.9184 26.8321 26.8404 27.9103 25.434 28.4744C23.3281 29.3098 18.3308 29.117 16.0036 29.117C13.6763 29.117 8.67195 29.3027 6.57312 28.4744C5.1739 27.9174 4.09593 26.8392 3.53196 25.4326C2.69671 23.3261 2.88946 18.3278 2.88946 16C2.88946 13.6722 2.70385 8.66674 3.53196 6.56744C4.08879 5.16791 5.16676 4.0897 6.57312 3.52561C8.67909 2.69017 13.6763 2.88296 16.0036 2.88296C18.3308 2.88296 23.3352 2.69731 25.434 3.52561C26.8332 4.08256 27.9112 5.16077 28.4752 6.56744C29.3104 8.67388 29.1177 13.6722 29.1177 16C29.1177 18.3278 29.3104 23.3333 28.4752 25.4326Z\" fill=\"#444\"></path></svg></span></a></li><li><a href=\"https://tiktok.com/@lafuong.pastry\" title=\"TikTok\" class=\"flex-center lf-transition  h-12 w-12 rounded-sm border border-transparent active:bg-gray-100 active:duration-100 sm:hover:bg-gray-100\" target=\"_blank\" rel=\"noopener noreferrer\"><span><svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M30 13.1194C27.2484 13.126 24.5643 12.2678 22.3269 10.6663V21.8363C22.3261 23.9051 21.6938 25.9243 20.5144 27.6241C19.3351 29.3238 17.6649 30.6229 15.7272 31.3478C13.7896 32.0727 11.6768 32.1888 9.67142 31.6805C7.66603 31.1722 5.86361 30.0638 4.50517 28.5035C3.14673 26.9431 2.29702 25.0053 2.06966 22.949C1.84231 20.8927 2.24814 18.8161 3.23289 16.9967C4.21764 15.1773 5.73438 13.7019 7.58028 12.7677C9.42619 11.8336 11.5133 11.4853 13.5625 11.7694V17.3875C12.6248 17.0925 11.6178 17.1014 10.6855 17.4129C9.75309 17.7243 8.94298 18.3225 8.3708 19.1218C7.79863 19.9211 7.49367 20.8808 7.49946 21.8638C7.50525 22.8468 7.8215 23.8029 8.40304 24.5954C8.98459 25.3879 9.8017 25.9765 10.7377 26.2769C11.6736 26.5774 12.6806 26.5744 13.6148 26.2684C14.549 25.9624 15.3626 25.3691 15.9395 24.5731C16.5163 23.7772 16.8269 22.8193 16.8269 21.8363V0H22.3269C22.3231 0.464463 22.362 0.928292 22.4431 1.38563C22.6342 2.40655 23.0316 3.37775 23.611 4.23983C24.1903 5.10191 24.9394 5.83674 25.8125 6.39937C27.0546 7.22068 28.5109 7.65844 30 7.65812V13.1194Z\" fill=\"#444\"></path></svg></span></a></li></ul></div><div class=\"\"><div class=\"mt-\">© 2022 LaFuong Pastry. <br> All rights reserved.</div></div></div></div></div></div><div class=\"flex place-items-end px-4 pb-4 lg:px-4\"><svg style=\"width:100%;height:auto\" width=\"90\" height=\"16\" viewBox=\"0 0 90 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.36839 15.8261H0C0.145226 15.4006 0.204675 14.952 0.175116 14.5048V2.95218C0.20378 2.65532 0.142951 2.35678 0 2.09277H2.46056C2.31598 2.35626 2.25433 2.65507 2.28322 2.95218V14.9388H7.71641L7.36839 15.8261Z\" fill=\"#ddd\"></path><path d=\"M9.04172 14.5412L13.5439 3.906C13.8042 3.29507 13.8042 2.60905 13.5439 1.99812L12.6572 0H14.2532L20.3271 14.3951C20.5113 14.9042 20.772 15.3842 21.1007 15.8195H18.1658C18.2008 15.7007 18.2187 15.5778 18.219 15.4543C18.1944 15.0906 18.0925 14.7359 17.9197 14.4122L16.7426 11.6192H11.9767L10.6754 14.6765C10.4936 15.0351 10.3867 15.425 10.3607 15.8238H8.32129C8.62672 15.4339 8.86961 15.0014 9.04172 14.5412ZM14.3619 5.59259L12.4976 10.2849H16.1375L14.3619 5.59259Z\" fill=\"#ddd\"></path><path d=\"M25.4745 7.95588H30.768L30.4155 8.8604H25.4745V14.8634C25.4469 15.1969 25.5071 15.5318 25.6496 15.8366H23.189C23.3312 15.5439 23.3916 15.2202 23.3641 14.8977V2.86604C23.3903 2.59356 23.3275 2.32001 23.1846 2.08398H31.8298L31.4773 2.98851H25.4922L25.4745 7.95588Z\" fill=\"#ddd\"></path><path d=\"M34.2308 9.69442V3.18012C34.2586 2.81793 34.1986 2.45446 34.0557 2.11875L36.5982 2.10156C36.4492 2.472 36.3834 2.86901 36.4054 3.26606V9.06705C36.4054 12.2619 37.1968 14.7477 39.746 14.7477C42.7541 14.7477 43.2639 12.0535 43.2639 10.8546V3.07484C43.2836 2.73973 43.2166 2.40515 43.0689 2.10156H45.0639C44.9242 2.44306 44.8578 2.8086 44.8688 3.17582V10.889C44.8688 12.8678 43.6563 15.996 39.4356 15.996C36.0241 16.0003 34.2308 14.0366 34.2308 9.69442Z\" fill=\"#ddd\"></path><path d=\"M49.1515 14.1044C48.445 13.4313 47.8836 12.6288 47.5 11.7436C47.1164 10.8584 46.9182 9.90805 46.917 8.94791C46.917 4.96886 50.1534 1.92871 54.3209 1.92871C58.4883 1.92871 61.7402 5.02257 61.7402 9.08757C61.7402 13.2385 58.2422 16.0015 54.2677 16.0015C52.3735 16.0332 50.5401 15.3534 49.1515 14.1044ZM59.3018 9.06178C58.8075 5.51458 55.9191 2.73655 52.8733 3.13618C50.0847 3.50142 49.0185 6.28805 49.3886 8.95651C49.8032 11.9172 52.1485 15.256 55.6332 14.8005C58.506 14.4331 59.6809 11.7883 59.3018 9.06178Z\" fill=\"#ddd\"></path><path d=\"M63.8372 14.5758V2.9889C63.8645 2.68312 63.8038 2.37601 63.6621 2.10156H66.5638L72.9635 12.6637V3.05765C72.9635 2.79768 72.9635 2.36368 72.7884 2.10156H74.5041C74.329 2.39806 74.329 2.70959 74.329 3.17582V14.4835C74.3007 14.9363 74.3601 15.3903 74.5041 15.822H72.7817L65.2205 3.52173V14.5715C65.1923 14.9955 65.2518 15.4207 65.3956 15.822H63.6732C63.8127 15.4213 63.8684 14.9977 63.8372 14.5758Z\" fill=\"#ddd\"></path><path d=\"M78.6268 14.1053C77.2391 12.8033 76.3945 11.0308 76.3945 8.77269C76.3954 7.52251 76.7542 6.29708 77.4308 5.23273C78.1075 4.16838 79.0755 3.30684 80.2272 2.74396C81.2647 2.22402 82.6368 1.92752 84.4656 1.92752C86.0987 1.88566 87.706 2.32872 89.072 3.19729L87.6466 4.23933C86.4695 3.37992 85.4144 3.00608 83.9713 3.00608C80.7016 3.00608 78.9083 5.68098 78.9083 8.04434C78.9083 12.0556 81.5994 15.0442 84.9223 15.0442C87.139 15.0442 87.8417 14.4534 87.8417 14.4534V8.86723H82.5836L82.9361 7.9627H89.5995C89.4567 8.27353 89.3958 8.61387 89.4222 8.95317V14.7907C88.5355 15.5534 86.5227 16.0067 84.4833 16.0067C81.8809 16.0003 80.0455 15.3923 78.6268 14.1053Z\" fill=\"#ddd\"></path></svg></div></footer></div>\r\n\r\n","export const environment = {\r\n  production: false,\r\n  apiUrl: 'http://192.168.1.17:8081'\r\n};","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","export class GlobalConstaints{\r\n\r\n    public static genericError: string = \"Something went wrong. Please try again later!\"\r\n\r\n    public static unauthorized:string = \"You are not authorized person to access this page.\"\r\n\r\n    public static productExistError:string = \"Product already exists.\"\r\n\r\n    public static productAdded:string = \"Product added succesfully.\"\r\n\r\n    public static nameRegex:string = \"[a-zA-Z0-9 ]*\";\r\n\r\n    public static emailRegex:string = \"[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}\";\r\n\r\n    public static contactNumberRegex:string = \"^[e0-9]{10,10}$\";\r\n\r\n    public static error:string = \"Error\"\r\n\r\n}","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { SnackbarService } from './snackbar.service';\nimport jwt_decode from \"jwt-decode\";\nimport { GlobalConstaints } from '../shared/global-constains';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService {\n\n  constructor(public auth:AuthService,\n    public router:Router,\n    public snackbarService:SnackbarService\n  ) { }\n\n  canActivate(router:ActivatedRouteSnapshot):boolean {\n    let expectedRoleArray = router.data;\n    expectedRoleArray = expectedRoleArray.expectedRole;\n\n    const token:any = localStorage.getItem('token');\n\n    var tokenPayload:any;\n    try {\n      tokenPayload = jwt_decode(token);\n    }\n    catch (error) {\n      localStorage.clear();\n      this.router.navigate(['/']);\n    }\n\n    let expectedRole = '';\n    for (let i = 0; i < expectedRoleArray.length; i++) {\n      if(expectedRoleArray[i] == tokenPayload.role){\n        expectedRole = tokenPayload.role;\n      }\n    }\n\n    if(tokenPayload.role == 'user' || tokenPayload.role == 'admin'){\n      if(this.auth.isAuthenticated() && tokenPayload.role == expectedRole){\n        return true;\n      }\n      this.snackbarService.openSnackBar(GlobalConstaints.unauthorized, GlobalConstaints.error);\n      this.router.navigate(['/']);\n      return false;\n    }\n    else {\n      this.router.navigate(['/']);\n      localStorage.clear();\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {  FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from 'src/app/service/snackbar.service';\nimport { UserService } from 'src/app/service/user.service';\nimport { GlobalConstaints } from 'src/app/shared/global-constains';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  oldPassword = true;\n  newPassword = true\n  confirmPassword = true \n  changePasswordForm:any = FormGroup;\n  responseMessage:any\n  constructor(\n    private formBuilder:FormBuilder,\n    private userService:UserService,\n    public dialogRef:MatDialogRef<ChangePasswordComponent>,\n    private ngxService:NgxUiLoaderService,\n    private snackbarService:SnackbarService\n  ) { }\n\n  ngOnInit(): void {\n    this.changePasswordForm = this.formBuilder.group(\n      {\n        oldPassword: [null, Validators.required],\n        newPassword: [null, Validators.required],\n        confirmPassword: [null, Validators.required]\n\n      }\n    )\n  }\n  validateSubmit() {\n    if(this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value){\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  handlePasswordChangeSubmit() {\n    this.ngxService.start();\n    var formData = this.changePasswordForm.value;\n    var data = {\n      oldPassword: formData.oldPassword,\n      newPassword: formData.newPassword,\n      confirmPassword: formData.confirmPassword\n    \n    }\n    this.userService.changePassword(data).subscribe((response:any) => {\n      this.ngxService.stop();\n      this.responseMessage = response?.message;\n      this.dialogRef.close();\n      this.snackbarService.openSnackBar(this.responseMessage,'Success');\n    },(error) =>{\n      console.log(error)\n      this.ngxService.stop();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n\n      }\n      else{\n        this.responseMessage = GlobalConstaints.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstaints.error)\n    })\n    \n  }\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span>Change Password</span>\n        <span class=\"spacer\"></span>\n        <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-toolbar-row>\n\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"changePasswordForm\" >\n        <div fxFlex fxLayout=\"column\">\n           \n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Old Password</mat-label>\n                <input matInput formControlName = \"oldPassword\" type=\"password\" required [type]=\"oldPassword ? 'password' : 'text'\">\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"oldPassword = !oldPassword\" [attr.arial-label]=\"'Hide password'\" [attr.arial-pressed]=\"oldPassword\">\n                    <mat-icon>{{oldPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"changePasswordForm.controls.oldPassword.touched && changePasswordForm.controls.oldPassword.invalid\">\n                    <span *ngIf=\"changePasswordForm.controls.oldPassword.errors.required\">Không được bỏ trống</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>New Password</mat-label>\n                <input matInput formControlName = \"newPassword\" type=\"password\" required [type]=\"newPassword ? 'password' : 'text'\">\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"newPassword = !newPassword\" [attr.arial-label]=\"'Hide password'\" [attr.arial-pressed]=\"newPassword\">\n                    <mat-icon>{{newPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"changePasswordForm.controls.newPassword.touched && changePasswordForm.controls.newPassword.invalid\">\n                    <span *ngIf=\"changePasswordForm.controls.newPassword.errors.required\">Không được bỏ trống</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Confrim Password</mat-label>\n                <input matInput formControlName = \"confirmPassword\" type=\"password\" required [type]=\"confirmPassword ? 'password' : 'text'\">\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"confirmPassword = !confirmPassword\" [attr.arial-label]=\"'Hide password'\" [attr.arial-pressed]=\"confirmPassword\">\n                    <mat-icon>{{confirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"changePasswordForm.controls.confirmPassword.touched && changePasswordForm.controls.confirmPassword.invalid\">\n                    <span *ngIf=\"changePasswordForm.controls.confirmPassword.errors.required\">Không được bỏ trống</span>\n                </mat-error>\n                <mat-hint *ngIf=\"validateSubmit() && !(changePasswordForm.controls.confirmPassword.invalid)\">\n                    <span>New Password & Confirm Password does not match</span>\n                </mat-hint>\n            </mat-form-field>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align =\"end\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handlePasswordChangeSubmit()\" [disabled]=\"!(changePasswordForm.valid && changePasswordForm.dirty)\">\n        <mat-icon>save</mat-icon>Update\n    </button>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>\n        <mat-icon>cancel</mat-icon>Close\n    </button>\n</mat-dialog-actions>\n\n\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  url = environment.apiUrl\n\n  constructor(private httpClient: HttpClient) { }\n\n  signup(data:any) {\n    return this.httpClient.post(\n      this.url + \"/user/signup\", data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      }\n    )\n  }\n\n  forgotedPassword(data:any) {\n    return this.httpClient.post(\n      this.url + \"/user/forgotedPassword\", data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      }\n    )\n  }\n\n  login(data:any) {\n    return this.httpClient.post(\n      this.url + \"/user/login\", data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      }\n    )\n  }\n  checkToken() {\n    return this.httpClient.get(this.url+\"/user/checkToken\")\n    \n  }\n  changePassword(data:any) {\n    return this.httpClient.post(\n      this.url + \"/user/changePassword\", data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      }\n    )\n  }\n  getUsers(){\n    return this.httpClient.get(this.url+\"/user/get\")\n  }\n  update(data:any){\n    return this.httpClient.post(\n      this.url + \"/user/update\", data, {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      }\n    )\n  }\n}\n","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from 'src/app/shared/menu-item';\r\nimport jwtDecode from 'jwt-decode';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n  userRole:any;\r\n  token:any = localStorage.getItem('token')\r\n  tokenPayload:any;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems:MenuItems\r\n  ) {\r\n    this.tokenPayload = jwtDecode(this.token)\r\n    this.userRole = this.tokenPayload?.role\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" \r\n        group=\"{{menuitem.state}}\">\r\n        <a class=\"\" appAccordionToggle [routerLink] = \"['/cafe/', menuitem.state]\"\r\n            *ngIf=\"menuitem.type === 'link' && (menuitem.role === '' || menuitem.role === userRole)\">\r\n            <mat-icon>{{menuitem.icon}}</mat-icon>\r\n            <span>{{menuitem.name}}</span>\r\n        </a>\r\n\r\n    </mat-list-item>\r\n</mat-nav-list>","import { NgModule } from '@angular/core';\r\n\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\nimport { MenuItems } from './menu-item';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [MenuItems]\r\n})\r\nexport class SharedModule { }\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { ChangeDetectorRef, Component, OnDestroy, AfterViewInit } from '@angular/core';\r\n\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() { }\r\n}\r\n","<div class=\"main-container\">\r\n    <mat-toolbar class=\"topbar telative\">\r\n        <div class=\"navbar-header\">\r\n            <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\" style=\"vertical-align: bottom;\">\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n            <a href=\"http://localhost:4200/cafe/dashboard\" class=\"logo\">\r\n                <svg class=\"h-[20px] w-auto sm:h-[22px]\" width=\"90\" height=\"16\" viewBox=\"0 0 90 16\" fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M7.36839 15.8261H0C0.145226 15.4006 0.204675 14.952 0.175116 14.5048V2.95218C0.20378 2.65532 0.142951 2.35678 0 2.09277H2.46056C2.31598 2.35626 2.25433 2.65507 2.28322 2.95218V14.9388H7.71641L7.36839 15.8261Z\"\r\n                        fill=\"#444\"></path>\r\n                    <path\r\n                        d=\"M9.04172 14.5412L13.5439 3.906C13.8042 3.29507 13.8042 2.60905 13.5439 1.99812L12.6572 0H14.2532L20.3271 14.3951C20.5113 14.9042 20.772 15.3842 21.1007 15.8195H18.1658C18.2008 15.7007 18.2187 15.5778 18.219 15.4543C18.1944 15.0906 18.0925 14.7359 17.9197 14.4122L16.7426 11.6192H11.9767L10.6754 14.6765C10.4936 15.0351 10.3867 15.425 10.3607 15.8238H8.32129C8.62672 15.4339 8.86961 15.0014 9.04172 14.5412ZM14.3619 5.59259L12.4976 10.2849H16.1375L14.3619 5.59259Z\"\r\n                        fill=\"#444\"></path>\r\n                    <path\r\n                        d=\"M25.4745 7.95588H30.768L30.4155 8.8604H25.4745V14.8634C25.4469 15.1969 25.5071 15.5318 25.6496 15.8366H23.189C23.3312 15.5439 23.3916 15.2202 23.3641 14.8977V2.86604C23.3903 2.59356 23.3275 2.32001 23.1846 2.08398H31.8298L31.4773 2.98851H25.4922L25.4745 7.95588Z\"\r\n                        fill=\"#444\"></path>\r\n                    <path\r\n                        d=\"M34.2308 9.69442V3.18012C34.2586 2.81793 34.1986 2.45446 34.0557 2.11875L36.5982 2.10156C36.4492 2.472 36.3834 2.86901 36.4054 3.26606V9.06705C36.4054 12.2619 37.1968 14.7477 39.746 14.7477C42.7541 14.7477 43.2639 12.0535 43.2639 10.8546V3.07484C43.2836 2.73973 43.2166 2.40515 43.0689 2.10156H45.0639C44.9242 2.44306 44.8578 2.8086 44.8688 3.17582V10.889C44.8688 12.8678 43.6563 15.996 39.4356 15.996C36.0241 16.0003 34.2308 14.0366 34.2308 9.69442Z\"\r\n                        fill=\"#444\"></path>\r\n                    <path\r\n                        d=\"M49.1515 14.1044C48.445 13.4313 47.8836 12.6288 47.5 11.7436C47.1164 10.8584 46.9182 9.90805 46.917 8.94791C46.917 4.96886 50.1534 1.92871 54.3209 1.92871C58.4883 1.92871 61.7402 5.02257 61.7402 9.08757C61.7402 13.2385 58.2422 16.0015 54.2677 16.0015C52.3735 16.0332 50.5401 15.3534 49.1515 14.1044ZM59.3018 9.06178C58.8075 5.51458 55.9191 2.73655 52.8733 3.13618C50.0847 3.50142 49.0185 6.28805 49.3886 8.95651C49.8032 11.9172 52.1485 15.256 55.6332 14.8005C58.506 14.4331 59.6809 11.7883 59.3018 9.06178Z\"\r\n                        fill=\"#444\"></path>\r\n                    <path\r\n                        d=\"M63.8372 14.5758V2.9889C63.8645 2.68312 63.8038 2.37601 63.6621 2.10156H66.5638L72.9635 12.6637V3.05765C72.9635 2.79768 72.9635 2.36368 72.7884 2.10156H74.5041C74.329 2.39806 74.329 2.70959 74.329 3.17582V14.4835C74.3007 14.9363 74.3601 15.3903 74.5041 15.822H72.7817L65.2205 3.52173V14.5715C65.1923 14.9955 65.2518 15.4207 65.3956 15.822H63.6732C63.8127 15.4213 63.8684 14.9977 63.8372 14.5758Z\"\r\n                        fill=\"#444\"></path>\r\n                    <path\r\n                        d=\"M78.6268 14.1053C77.2391 12.8033 76.3945 11.0308 76.3945 8.77269C76.3954 7.52251 76.7542 6.29708 77.4308 5.23273C78.1075 4.16838 79.0755 3.30684 80.2272 2.74396C81.2647 2.22402 82.6368 1.92752 84.4656 1.92752C86.0987 1.88566 87.706 2.32872 89.072 3.19729L87.6466 4.23933C86.4695 3.37992 85.4144 3.00608 83.9713 3.00608C80.7016 3.00608 78.9083 5.68098 78.9083 8.04434C78.9083 12.0556 81.5994 15.0442 84.9223 15.0442C87.139 15.0442 87.8417 14.4534 87.8417 14.4534V8.86723H82.5836L82.9361 7.9627H89.5995C89.4567 8.27353 89.3958 8.61387 89.4222 8.95317V14.7907C88.5355 15.5534 86.5227 16.0067 84.4833 16.0067C81.8809 16.0003 80.0455 15.3923 78.6268 14.1053Z\"\r\n                        fill=\"#444\"></path>\r\n                </svg>\r\n            </a>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <app-header></app-header>\r\n    </mat-toolbar>\r\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\r\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\"\r\n            fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\">\r\n            <app-sidebar></app-sidebar>\r\n        </mat-sidenav>\r\n        <mat-sidenav-content class=\"page-wrapper\">\r\n            <div class=\"page-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Cafe Management System';\r\n}\r\n","<router-outlet></router-outlet>\r\n<ngx-ui-loader></ngx-ui-loader>","import { Component, OnInit, Inject, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  onEmitStatusChange = new EventEmitter()\n  details:any = {}\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any) { }\n\n  ngOnInit(): void {\n    if (this.dialogData && this.dialogData.confirmation) {\n      this.details = this.dialogData\n    }\n  }\n  handleChangeAction() {\n    this.onEmitStatusChange.emit();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span>Confirmation</span>\n        <span class=\"spacer\"></span>\n        <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <h6>Are you sure want to {{details.message}}</h6>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleChangeAction()\">\n        <mat-icon>check_circle</mat-icon>Yes\n    </button>\n\n    <button mat-raised-button color=\"warn\" (click)=\"handleChangeAction()\">\n        <mat-icon>cancel</mat-icon>No\n    </button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './shared/material-module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BestSellerComponent } from './best-seller/best-seller.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { NgxUiLoaderConfig, NgxUiLoaderModule, SPINNER } from 'ngx-ui-loader';\r\nimport { ForgottedPasswordComponent } from './forgotted-password/forgotted-password.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { TokenInterceptorInterceptor } from './service/token-interceptor.interceptor';\r\n\r\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\r\n  text: \"Loading...\",\r\n  textColor: \"#FFFFFF\",\r\n  textPosition: \"center-center\",\r\n  bgsColor: \"#7b1fa2\",\r\n  fgsColor: \"#7b1fa2\",\r\n  fgsType: SPINNER.squareJellyBox,\r\n  fgsSize: 100,\r\n  hasProgressBar: false\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    BestSellerComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    AppSidebarComponent,\r\n    SignupComponent,\r\n    ForgottedPasswordComponent,\r\n    LoginComponent\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig)\r\n  ],\r\n  providers: [HttpClientModule, {provide:HTTP_INTERCEPTORS, useClass:TokenInterceptorInterceptor,multi:true}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { ThisReceiver } from '@angular/compiler';\n\n@Injectable()\nexport class TokenInterceptorInterceptor implements HttpInterceptor {\n\n  constructor(private router:Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = localStorage.getItem('token')\n    if(token) {\n      request = request.clone({\n        setHeaders: {Authorization: `Bearer ${token}`}\n      })\n    }\n\n    return next.handle(request).pipe(\n      catchError((error) => {\n       if (error instanceof HttpErrorResponse){\n        console.log(error.url)\n        if (error.status === 401 || error.status === 403){\n          if(this.router.url === '/'){\n\n          }\n          else {\n            localStorage.clear();\n            this.router.navigate(['/']);\n          }\n        }\n       }\n       return throwError(error);\n      })\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { UserService } from '../service/user.service';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from '../service/snackbar.service';\nimport { GlobalConstaints } from '../shared/global-constains';\nimport { emit } from 'process';\n\n@Component({\n  selector: 'app-forgotted-password',\n  templateUrl: './forgotted-password.component.html',\n  styleUrls: ['./forgotted-password.component.scss']\n})\nexport class ForgottedPasswordComponent implements OnInit {\n  forgotPasswordForm:any = FormGroup;\n  resposeMessage:any;\n\n  constructor(private formBuilder:FormBuilder,\n    private userService:UserService,\n    public dialogRef:MatDialogRef<ForgottedPasswordComponent>,\n    private ngxService:NgxUiLoaderService,\n    private snackbarService:SnackbarService) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = this.formBuilder.group({\n      email:[null,[Validators.required,Validators.pattern(GlobalConstaints.emailRegex)]]\n    })\n  }\n\n  handleSubmit(){\n    this.ngxService.start();\n    var formData = this.forgotPasswordForm.value;\n    var data = {\n      email: formData.email\n    }\n    this.userService.forgotedPassword(data).subscribe((respose:any)=> {\n      this.ngxService.stop()\n      this.resposeMessage =respose?.message\n      this.dialogRef.close()\n      this.snackbarService.openSnackBar(this.resposeMessage,\"\")\n    }, (error) => {\n      this.ngxService.stop()\n      if(error.error?.message) {\n        this.resposeMessage = error.error?.message\n      }\n      else {\n        this.resposeMessage = GlobalConstaints.genericError;\n      }\n      this.snackbarService.openSnackBar(this.resposeMessage, GlobalConstaints.error)\n    });\n    \n  }\n\n}\n","<mat-toolbar>\n    <mat-toolbar-row fxLayout=\"row\">\n        <span>Forgot Password?</span>\n        <span class=\"spacer\"></span>\n        <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close> \n            <mat-icon>close</mat-icon>     \n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"forgotPasswordForm\">\n        <div fxFlex fxLayout=\"column\">\n            <mat-form-field appearance=\"standard\" fxFlex>\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"forgotPasswordForm.controls.email.touched && forgotPasswordForm.controls.email.invaid\">\n                    <span *ngIf=\"forgotPasswordForm.controls.email.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"forgotPasswordForm.controls.email.errors.pattern\">Vui lòng nhập lại email</span>\n                </mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align =\"end\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\" [disabled]=\"!(forgotPasswordForm.valid && forgotPasswordForm.dirty)\">\n        <mat-icon>send</mat-icon>Gửi email\n    </button>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>\n        <mat-icon>cancel</mat-icon>Close\n    </button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(private snackBar:MatSnackBar) { }\n\n  openSnackBar(message:string, action:string) {\n    if (action === 'error') {\n      this.snackBar.open(message, '', {\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        duration: 200,\n        panelClass: ['black-snackbar']\n\n      })\n    }\n    else {\n      this.snackBar.open(message, '', {\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        duration: 200,\n        panelClass: ['green-snackbar']\n\n      })\n    }\n  }\n}\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n import { NgModule } from '@angular/core';\r\n import { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n import { MatButtonModule } from '@angular/material/button';\r\n import { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n import { MatCardModule } from '@angular/material/card';\r\n import { MatCheckboxModule } from '@angular/material/checkbox';\r\n import { MatChipsModule } from '@angular/material/chips';\r\n import { MatDatepickerModule } from '@angular/material/datepicker';\r\n import { MatDialogModule } from '@angular/material/dialog';\r\n import { MatExpansionModule } from '@angular/material/expansion';\r\n import { MatFormFieldModule } from '@angular/material/form-field';\r\n import { MatGridListModule } from '@angular/material/grid-list';\r\n import { MatIconModule } from '@angular/material/icon';\r\n import { MatInputModule } from '@angular/material/input';\r\n import { MatListModule } from '@angular/material/list';\r\n import { MatMenuModule } from '@angular/material/menu';\r\n import { MatPaginatorModule } from '@angular/material/paginator';\r\n import { MatProgressBarModule } from '@angular/material/progress-bar';\r\n import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n import { MatRadioModule } from '@angular/material/radio';\r\n import { MatSelectModule } from '@angular/material/select';\r\n import { MatSidenavModule } from '@angular/material/sidenav';\r\n import { MatSliderModule } from '@angular/material/slider';\r\n import { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n import { MatSnackBarModule } from '@angular/material/snack-bar';\r\n import { MatSortModule } from '@angular/material/sort';\r\n import { MatTableModule } from '@angular/material/table';\r\n import { MatTabsModule } from '@angular/material/tabs';\r\n import { MatToolbarModule } from '@angular/material/toolbar';\r\n import { MatTooltipModule } from '@angular/material/tooltip';\r\n import { MatStepperModule } from '@angular/material/stepper';\r\n import { MatBadgeModule } from '@angular/material/badge';\r\n import { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\n import { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n \r\n import { CdkTableModule } from '@angular/cdk/table';\r\n import { CdkAccordionModule } from '@angular/cdk/accordion';\r\n import { A11yModule } from '@angular/cdk/a11y';\r\n import { BidiModule } from '@angular/cdk/bidi';\r\n import { OverlayModule } from '@angular/cdk/overlay';\r\n import { PlatformModule } from '@angular/cdk/platform';\r\n import { ObserversModule } from '@angular/cdk/observers';\r\n import { PortalModule } from '@angular/cdk/portal';\r\n \r\n /**\r\n  * NgModule that includes all Material modules that are required to serve the demo-app.\r\n  */\r\n @NgModule({\r\n     exports: [\r\n         MatAutocompleteModule,\r\n         MatButtonModule,\r\n         MatBottomSheetModule,\r\n         MatButtonToggleModule,\r\n         MatCardModule,\r\n         MatCheckboxModule,\r\n         MatChipsModule,\r\n         MatTableModule,\r\n         MatDatepickerModule,\r\n         MatDialogModule,\r\n         MatExpansionModule,\r\n         MatFormFieldModule,\r\n         MatGridListModule,\r\n         MatIconModule,\r\n         MatInputModule,\r\n         MatListModule,\r\n         MatMenuModule,\r\n         MatPaginatorModule,\r\n         MatProgressBarModule,\r\n         MatProgressSpinnerModule,\r\n         MatRadioModule,\r\n         MatRippleModule,\r\n         MatSelectModule,\r\n         MatBadgeModule,\r\n         MatSidenavModule,\r\n         MatSlideToggleModule,\r\n         MatSliderModule,\r\n         MatSnackBarModule,\r\n         MatSortModule,\r\n         MatStepperModule,\r\n         MatTabsModule,\r\n         MatToolbarModule,\r\n         MatTooltipModule,\r\n         MatNativeDateModule,\r\n         CdkTableModule,\r\n         A11yModule,\r\n         BidiModule,\r\n         CdkAccordionModule,\r\n         ObserversModule,\r\n         OverlayModule,\r\n         PlatformModule,\r\n         PortalModule\r\n     ]\r\n })\r\n export class MaterialModule { }\r\n ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { SnackbarService } from '../service/snackbar.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { GlobalConstaints } from '../shared/global-constains';\nimport { error } from 'console';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  password = true\n  confirmPassword = true\n  signupForm: any = FormGroup\n  responseMessage: any\n\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private snackBarService: SnackbarService,\n    public dialogRef: MatDialogRef<SignupComponent>,\n    private ngxService: NgxUiLoaderService\n  ) { }\n\n  ngOnInit(): void {\n    this.signupForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstaints.nameRegex)]],\n      email: [null, [Validators.required, Validators.pattern(GlobalConstaints.emailRegex)]],\n      contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstaints.contactNumberRegex)]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]]\n    })\n  }\n\n  validateSubmit() {\n    if (this.signupForm.controls['password'].value != this.signupForm.controls['confirmPassword'].value) {\n      return true;\n    }\n    else {\n      return false\n    }\n  }\n\n  handleSubmit() {\n    this.ngxService.start();\n    var formData = this.signupForm.value\n    var data = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      password: formData.password\n     \n    }\n    this.userService.signup(data).subscribe((response:any) => {\n      this.ngxService.stop();\n      this.dialogRef.close();\n      this.responseMessage = response?.message;\n      this.snackBarService.openSnackBar(this.responseMessage, \"\")\n      this.router.navigate(['/'])\n    }, (error) => {\n      this.ngxService.stop()\n      if(error.error?.message) {\n        this.responseMessage = error.error?.message\n      }\n      else {\n        this.responseMessage = GlobalConstaints.genericError;\n      }\n      this.snackBarService.openSnackBar(this.responseMessage, GlobalConstaints.error)\n    });\n  }\n\n}\n","<mat-toolbar>\n    <mat-toolbar-row fxLayout=\"row\">\n        <span>Sign Up</span>\n        <span class=\"spacer\"></span>\n        <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"signupForm\" >\n        <div fxFlex fxLayout=\"column\">\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Name</mat-label>\n                <input matInput formControlName = \"name\" required>\n                <mat-error *ngIf=\"signupForm.controls.name.touched && signupForm.controls.name.invalid\">\n                    <span *ngIf=\"signupForm.controls.name.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"signupForm.controls.name.errors.pattern\">Tên không hợp lệ</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Email</mat-label>\n                <input matInput formControlName = \"email\" required>\n                <mat-error *ngIf=\"signupForm.controls.email.touched && signupForm.controls.email.invalid\">\n                    <span *ngIf=\"signupForm.controls.email.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"signupForm.controls.email.errors.pattern\">Email không hợp lệ</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Contact Number</mat-label>\n                <input matInput formControlName = \"contactNumber\" required>\n                <mat-error *ngIf=\"signupForm.controls.contactNumber.touched && signupForm.controls.contactNumber.invalid\">\n                    <span *ngIf=\"signupForm.controls.contactNumber.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"signupForm.controls.contactNumber.errors.pattern\">Số điện thoại không hợp lệ</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Password</mat-label>\n                <input matInput formControlName = \"password\" required [type]=\"password ? 'password' : 'text'\">\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"password = !password\" [attr.arial-label]=\"'Hide password'\" [attr.arial-pressed]=\"password\">\n                    <mat-icon>{{password ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"signupForm.controls.password.touched && signupForm.controls.password.invalid\">\n                    <span *ngIf=\"signupForm.controls.password.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"signupForm.controls.password.errors.pattern\">Mật khẩu không hợp lệ</span>\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Confirm Password</mat-label>\n                <input matInput formControlName = \"confirmPassword\" required [type]=\"confirmPassword ? 'password' : 'text'\">\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"confirmPassword = !confirmPassword\" [attr.arial-label]=\"'Hide password'\" [attr.arial-pressed]=\"confirmPassword\">\n                    <mat-icon>{{confirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"signupForm.controls.confirmPassword.touched && signupForm.controls.confirmPassword.invalid\">\n                    <span *ngIf=\"signupForm.controls.confirmPassword.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"signupForm.controls.confirmPassword.errors.pattern\">Mật khẩu không hợp lệ</span>\n                </mat-error> \n                <mat-hint *ngIf=\"validateSubmit() && !(signupForm.controls.confirmPassword.invalid)\">\n                    <span>New Password & Confirm Password doesn't match</span>\n                </mat-hint>\n            </mat-form-field>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align =\"end\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\" [disabled]=\"validateSubmit() || !(signupForm.valid && signupForm.dirty)\">\n        <mat-icon>save</mat-icon>Sign Up\n    </button>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>\n        <mat-icon>cancel</mat-icon>Close\n    </button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { RouteGuardService } from './service/route-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: 'cafe',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/cafe/dashboard',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: '',\r\n        loadChildren:\r\n          () => import('./material-component/material.module').then(m => m.MaterialComponentsModule),\r\n        canActivate: [RouteGuardService],\r\n        data: {\r\n          expectedRole: ['admin', 'user']\r\n        }\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../service/user.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from '../service/snackbar.service';\nimport { Route, Router } from '@angular/router';\nimport { GlobalConstaints } from '../shared/global-constains';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  loginForm:any = FormBuilder;\n  responseMessage:any\n  constructor(private formBuilder:FormBuilder,\n    private router:Router,\n    private userService:UserService,\n    public dialogRef:MatDialogRef<LoginComponent>,\n    private ngxService:NgxUiLoaderService,\n    private snackBarService:SnackbarService\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.pattern(GlobalConstaints.emailRegex)]],\n      password: [null, [Validators.required]],\n      \n    })\n\n  }\n\n  handleSubmit() {\n    this.ngxService.start();\n    var formData = this.loginForm.value\n    var data = {\n      email: formData.email,\n      password: formData.password\n     \n    }\n    this.userService.login(data).subscribe((response:any) => {\n      this.ngxService.stop();\n      this.dialogRef.close();\n      localStorage.setItem('token', response.token)\n      this.router.navigate(['/cafe/dashboard'])\n    }, (error) => {\n      this.ngxService.stop()\n      if(error.error?.message) {\n        this.responseMessage = error.error?.message\n      }\n      else {\n        this.responseMessage = GlobalConstaints.genericError;\n      }\n      this.snackBarService.openSnackBar(this.responseMessage, GlobalConstaints.error)\n    });\n  }\n  \n\n}\n","\n<mat-toolbar>\n    <mat-toolbar-row fxLayout=\"row\">\n        <span>Login</span>\n        <span class=\"spacer\"></span>\n        <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"loginForm\" >\n        <div fxFlex fxLayout=\"column\">\n           \n\n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Email</mat-label>\n                <input matInput formControlName = \"email\" required>\n                <mat-error *ngIf=\"loginForm.controls.email.touched && loginForm.controls.email.invalid\">\n                    <span *ngIf=\"loginForm.controls.email.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"loginForm.controls.email.errors.pattern\">Email không hợp lệ</span>\n                </mat-error>\n            </mat-form-field>\n\n        \n\n            <mat-form-field appearance =\"standard\" fxFlex>\n                <mat-label>Password</mat-label>\n                <input matInput formControlName = \"password\" required [type]=\"hide ? 'password' : 'text'\">\n                <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.arial-label]=\"'Hide password'\" [attr.arial-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"loginForm.controls.password.touched && loginForm.controls.password.invalid\">\n                    <span *ngIf=\"loginForm.controls.password.errors.required\">Không được bỏ trống</span>\n                    <span *ngIf=\"loginForm.controls.password.errors.pattern\">Mật khẩu không hợp lệ</span>\n                </mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align =\"end\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\" [disabled]=\"!(loginForm.valid && loginForm.dirty)\">\n        <mat-icon>save</mat-icon>Login\n    </button>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>\n        <mat-icon>cancel</mat-icon>Close\n    </button>\n</mat-dialog-actions>","import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ChangePasswordComponent } from 'src/app/material-component/dialog/change-password/change-password.component';\r\nimport { ConfirmationComponent } from 'src/app/material-component/dialog/confirmation/confirmation.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {\r\n  role:any;\r\n  constructor(private router:Router,\r\n    private dialog:MatDialog\r\n  ) {\r\n  }\r\n\r\n  logout(){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      message:'Logout',\r\n      confirmation:true\r\n    }\r\n    const dialogRef = this.dialog.open(ConfirmationComponent,dialogConfig)\r\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe((response:any)=>{\r\n      dialogRef.close();\r\n      localStorage.clear();\r\n      this.router.navigate(['/']);\r\n    })\r\n  }\r\n  changePassword(){\r\n   const dialogConfig = new MatDialogConfig();\r\n   dialogConfig.width=\"550px\"\r\n   this.dialog.open(ChangePasswordComponent,dialogConfig);\r\n  }\r\n}\r\n","<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\">\r\n    <mat-icon>account_circle</mat-icon>\r\n</button>\r\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\r\n<button mat-menu-item (click)=\"changePassword()\">\r\n    <mat-icon>password</mat-icon> Change Password\r\n</button>\r\n\r\n<button mat-menu-item (click)=\"logout()\">\r\n    <mat-icon>exit_to_app</mat-icon> Log out\r\n</button>\r\n</mat-menu>","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}